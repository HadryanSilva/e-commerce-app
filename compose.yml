services:
  postgres:
    container_name: postgres
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
        - "5432:5432"
    volumes:
        - postgres-data:/var/lib/postgresql/data
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

  mongo:
    container_name: mongo
    image: mongo:4.4
    ports:
        - "27017:27017"
    volumes:
        - mongo-data:/data/db
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - app-network
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8.4
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
        - "2181:2181"
    networks:
      - app-network
    restart: unless-stopped

  kafka:
    container_name: kafka
    hostname: kafka
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    depends_on:
      - zookeeper
    networks:
        - app-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
        - "8000:8080"
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: 'kafka'
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: 'kafka:29092,localhost:29092,localhost:9092,kafka:9092'
    networks:
      - app-network
    depends_on:
      - kafka
      - zookeeper
    restart: unless-stopped
  kafka-init-topics:
    image: confluentinc/cp-kafka:7.2.1
    volumes:
      - ./data/message.json:/data/message.json
    depends_on:
      - kafka
    command: "bash -c 'echo Waiting for Kafka to be ready... && \
                 cub kafka-ready -b kafka:29092 1 30 && \
                 kafka-topics --create --topic users --partitions 3 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                 kafka-topics --create --topic messages --partitions 2 --replication-factor 1 --if-not-exists --bootstrap-server kafka:29092 && \
                 kafka-console-producer --bootstrap-server kafka:29092 --topic users < /data/message.json'"

  mail-dev:
    container_name: maildev
    image: maildev/maildev
    ports:
        - "1080:1080"
        - "1025:1025"
    networks:
      - app-network
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
        - "9411:9411"
    networks:
      - app-network
    restart: unless-stopped

networks:
    app-network:
        driver: bridge

volumes:
    postgres-data:
    mongo-data: