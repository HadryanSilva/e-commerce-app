services:
  postgres:
    container_name: postgres
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
        - "5432:5432"
    volumes:
        - postgres-data:/var/lib/postgresql/data
        - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    restart: unless-stopped

  mongo:
    container_name: mongo
    image: mongo:4.4
    ports:
        - "27017:27017"
    volumes:
        - mongo-data:/data/db
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: root
    networks:
      - app-network
    restart: unless-stopped

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.8.4
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
        - "2181:2181"
    networks:
      - app-network
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
    depends_on:
      - zookeeper
    networks:
        - app-network

  mail-dev:
    container_name: maildev
    image: maildev/maildev
    ports:
        - "1080:1080"
        - "1025:1025"
    networks:
      - app-network
    restart: unless-stopped

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
        - "9411:9411"
    networks:
      - app-network
    restart: unless-stopped

networks:
    app-network:
        driver: bridge

volumes:
    postgres-data:
    mongo-data: